#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    May 25, 2023 02:37:52 PM EDT  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
import src.Page_GUI.pdrobot_support as pdrobot_support


_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = 'gray40'  # X11 color: #666666
_ana1color = '#c3c3c3'  # Closest X11 color: 'gray76'
_ana2color = 'beige'  # X11 color: #f5f5dc
_tabfg1 = 'black'
_tabfg2 = 'black'
_tabbg1 = 'grey75'
_tabbg2 = 'grey89'
_bgmode = 'light'

# Global
_style_code_ran = 0

def _style_code():
    global _style_code_ran
    if _style_code_ran:
        return
    style = ttk.Style()
    if sys.platform == "win32":
        style.theme_use('winnative')
    style.configure('.', background=_bgcolor)
    style.configure('.', foreground=_fgcolor)
    style.configure('.', font='TkDefaultFont')
    style.map('.', background=
    [('selected', _compcolor), ('active', _ana2color)])
    if _bgmode == 'dark':
        style.map('.', foreground=
        [('selected', 'white'), ('active', 'white')])
    else:
        style.map('.', foreground=
        [('selected', 'black'), ('active', 'black')])
    style.configure('Vertical.TScrollbar', background=_bgcolor,
                    arrowcolor=_fgcolor)
    style.configure('Horizontal.TScrollbar', background=_bgcolor,
                    arrowcolor=_fgcolor)
    _style_code_ran = 1


class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.
        '''
        top.geometry("720x700+238+96")
        top.minsize(600, 750)
        top.maxsize(1900, 1200)
        top.resizable(1, 1)
        top.title("Product Development Cycle Tester")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top
        self.absolutePos = tk.StringVar()
        self.absoluteRot = tk.StringVar()
        self.set1_pos = tk.StringVar()
        self.set1_rot = tk.StringVar()
        self.set2_pos = tk.StringVar()
        self.set2_rot = tk.StringVar()
        self.set3_pos = tk.StringVar()
        self.set3_rot = tk.StringVar()
        self.set4_pos = tk.StringVar()
        self.set4_rot = tk.StringVar()
        self.serial_prt = tk.StringVar()
        self.gcode_list_var = tk.StringVar()
        self.dg_filename = tk.StringVar()
        self.speedLin = tk.DoubleVar()
        self.speedRot = tk.DoubleVar()
        self.set1_locked = tk.BooleanVar()
        self.set2_locked = tk.BooleanVar()
        self.set3_locked = tk.BooleanVar()
        self.set4_locked = tk.BooleanVar()
        self.run_halt    = tk.BooleanVar()
        self.source_file = str()
        self.gcode_file = str()

        self.Labelframe1 = tk.LabelFrame(self.top)
        self.Labelframe1.place(relx=0.033, rely=0.014, relheight=0.193, relwidth=0.917)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.Labelframe1.configure(foreground="#000000")
        self.Labelframe1.configure(text='''Move Linear Relative''')
        self.Labelframe1.configure(background="#d9d9d9")
        self.Labelframe1.configure(highlightbackground="#d9d9d9")
        self.Labelframe1.configure(highlightcolor="black")

        self.Labelframe2 = tk.LabelFrame(self.Labelframe1)
        self.Labelframe2.place(relx=0.018, rely=0.17, relheight=0.748, relwidth=0.4, bordermode='ignore')
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.Labelframe2.configure(foreground="#000000")
        self.Labelframe2.configure(text='''Bump Back''')
        self.Labelframe2.configure(background="#d9d9d9")
        self.Labelframe2.configure(highlightbackground="#d9d9d9")
        self.Labelframe2.configure(highlightcolor="black")

        self.buttonBk50 = tk.Button(self.Labelframe2)
        self.buttonBk50.place(relx=0.045, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonBk50.configure(activebackground="beige")
        self.buttonBk50.configure(activeforeground="black")
        self.buttonBk50.configure(background="#d9d9d9")
        self.buttonBk50.configure(command=lambda: pdrobot_support.cb_buttonLin(-50))
        self.buttonBk50.configure(compound='left')
        self.buttonBk50.configure(disabledforeground="#a3a3a3")
        self.buttonBk50.configure(foreground="#000000")
        self.buttonBk50.configure(highlightbackground="#d9d9d9")
        self.buttonBk50.configure(highlightcolor="black")
        self.buttonBk50.configure(pady="0")
        self.buttonBk50.configure(text='''50''')
        self.buttonBk50_tooltip = \
            ToolTip(self.buttonBk50, '''Immediate backward move 50mm relitive''')

        self.buttonBk10 = tk.Button(self.Labelframe2)
        self.buttonBk10.place(relx=0.273, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonBk10.configure(activebackground="beige")
        self.buttonBk10.configure(activeforeground="black")
        self.buttonBk10.configure(background="#d9d9d9")
        self.buttonBk10.configure(command=lambda: pdrobot_support.cb_buttonLin(-10))
        self.buttonBk10.configure(compound='left')
        self.buttonBk10.configure(disabledforeground="#a3a3a3")
        self.buttonBk10.configure(foreground="#000000")
        self.buttonBk10.configure(highlightbackground="#d9d9d9")
        self.buttonBk10.configure(highlightcolor="black")
        self.buttonBk10.configure(pady="0")
        self.buttonBk10.configure(text='''10''')
        self.buttonBk10_tooltip = \
            ToolTip(self.buttonBk10, '''Immediate backward move 10mm relitive''')

        self.buttonBk1 = tk.Button(self.Labelframe2)
        self.buttonBk1.place(relx=0.5, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonBk1.configure(activebackground="beige")
        self.buttonBk1.configure(activeforeground="black")
        self.buttonBk1.configure(background="#d9d9d9")
        self.buttonBk1.configure(command=lambda: pdrobot_support.cb_buttonLin(-1))
        self.buttonBk1.configure(compound='left')
        self.buttonBk1.configure(disabledforeground="#a3a3a3")
        self.buttonBk1.configure(foreground="#000000")
        self.buttonBk1.configure(highlightbackground="#d9d9d9")
        self.buttonBk1.configure(highlightcolor="black")
        self.buttonBk1.configure(pady="0")
        self.buttonBk1.configure(text='''1''')
        self.buttonBk1_tooltip = \
            ToolTip(self.buttonBk1, '''Immediate backward move 1mm relitive''')

        self.buttonBk01 = tk.Button(self.Labelframe2)
        self.buttonBk01.place(relx=0.727, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonBk01.configure(activebackground="beige")
        self.buttonBk01.configure(activeforeground="black")
        self.buttonBk01.configure(background="#d9d9d9")
        self.buttonBk01.configure(command=lambda: pdrobot_support.cb_buttonLin(float(-0.1)))
        self.buttonBk01.configure(compound='left')
        self.buttonBk01.configure(disabledforeground="#a3a3a3")
        self.buttonBk01.configure(foreground="#000000")
        self.buttonBk01.configure(highlightbackground="#d9d9d9")
        self.buttonBk01.configure(highlightcolor="black")
        self.buttonBk01.configure(pady="0")
        self.buttonBk01.configure(text='''0.1''')
        self.buttonBk01_tooltip = \
            ToolTip(self.buttonBk01, '''Immediate backward move 0.1mm relitive''')

        self.scaleLinSpeed = tk.Scale(self.Labelframe2, from_=10, to=100.0, resolution=1.0)
        self.scaleLinSpeed.place(relx=0.25, rely=0.45, relheight=0.5, relwidth=0.7)
        self.scaleLinSpeed.configure(activebackground="beige")
        self.scaleLinSpeed.configure(background="#d9d9d9")
#        self.scaleLinSpeed.configure(command=lambda v: pdrobot_support.cb_scaleLinSpeed(v))
        self.scaleLinSpeed.configure(command=pdrobot_support.cb_scaleLinSpeed)
        self.scaleLinSpeed.configure(foreground="#000000")
        self.scaleLinSpeed.configure(highlightbackground="#d9d9d9")
        self.scaleLinSpeed.configure(highlightcolor="black")
        self.scaleLinSpeed.configure(length="136")
        self.scaleLinSpeed.configure(orient="horizontal")
        self.scaleLinSpeed.configure(troughcolor="#d9d9d9")
        self.scaleLinSpeed.configure(variable=self.speedLin)
        self.speedLin.set(100)

        self.Label1 = tk.Label(self.Labelframe2)
        self.Label1.place(relx=0.01, rely=0.75, height=18, width=45, bordermode='ignore')
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Speed''')

        self.Labelframe2_1 = tk.LabelFrame(self.Labelframe1)
        self.Labelframe2_1.place(relx=0.582, rely=0.148, relheight=0.748, relwidth=0.4, bordermode='ignore')
        self.Labelframe2_1.configure(relief='groove')
        self.Labelframe2_1.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.Labelframe2_1.configure(foreground="#000000")
        self.Labelframe2_1.configure(text='''Bump Forward''')
        self.Labelframe2_1.configure(background="#d9d9d9")
        self.Labelframe2_1.configure(highlightbackground="#d9d9d9")
        self.Labelframe2_1.configure(highlightcolor="black")

        self.buttonFw01 = tk.Button(self.Labelframe2_1)
        self.buttonFw01.place(relx=0.045, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonFw01.configure(activebackground="beige")
        self.buttonFw01.configure(activeforeground="black")
        self.buttonFw01.configure(background="#d9d9d9")
        self.buttonFw01.configure(command=lambda: pdrobot_support.cb_buttonLin(float(0.1)))
        self.buttonFw01.configure(compound='left')
        self.buttonFw01.configure(disabledforeground="#a3a3a3")
        self.buttonFw01.configure(foreground="#000000")
        self.buttonFw01.configure(highlightbackground="#d9d9d9")
        self.buttonFw01.configure(highlightcolor="black")
        self.buttonFw01.configure(pady="0")
        self.buttonFw01.configure(text='''0.1''')
        self.buttonFw01_tooltip = \
            ToolTip(self.buttonFw01, '''Immediate forward move 0.1mm relitive''')

        self.buttonFw1 = tk.Button(self.Labelframe2_1)
        self.buttonFw1.place(relx=0.273, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonFw1.configure(activebackground="beige")
        self.buttonFw1.configure(activeforeground="black")
        self.buttonFw1.configure(background="#d9d9d9")
        self.buttonFw1.configure(command=lambda: pdrobot_support.cb_buttonLin(1))
        self.buttonFw1.configure(compound='left')
        self.buttonFw1.configure(disabledforeground="#a3a3a3")
        self.buttonFw1.configure(foreground="#000000")
        self.buttonFw1.configure(highlightbackground="#d9d9d9")
        self.buttonFw1.configure(highlightcolor="black")
        self.buttonFw1.configure(pady="0")
        self.buttonFw1.configure(text='''1''')
        self.buttonFw1_tooltip = \
            ToolTip(self.buttonFw1, '''Immediate forward move 1mm relitive''')

        self.buttonFw10 = tk.Button(self.Labelframe2_1)
        self.buttonFw10.place(relx=0.5, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonFw10.configure(activebackground="beige")
        self.buttonFw10.configure(activeforeground="black")
        self.buttonFw10.configure(background="#d9d9d9")
        self.buttonFw10.configure(command=lambda: pdrobot_support.cb_buttonLin(10))
        self.buttonFw10.configure(compound='left')
        self.buttonFw10.configure(disabledforeground="#a3a3a3")
        self.buttonFw10.configure(foreground="#000000")
        self.buttonFw10.configure(highlightbackground="#d9d9d9")
        self.buttonFw10.configure(highlightcolor="black")
        self.buttonFw10.configure(pady="0")
        self.buttonFw10.configure(text='''10''')
        self.buttonFw10_tooltip = \
            ToolTip(self.buttonFw10, '''Immediate forward move 10mm relitive''')

        self.buttonFw50 = tk.Button(self.Labelframe2_1)
        self.buttonFw50.place(relx=0.727, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonFw50.configure(activebackground="beige")
        self.buttonFw50.configure(activeforeground="black")
        self.buttonFw50.configure(background="#d9d9d9")
        self.buttonFw50.configure(command=lambda: pdrobot_support.cb_buttonLin(50))
        self.buttonFw50.configure(compound='left')
        self.buttonFw50.configure(disabledforeground="#a3a3a3")
        self.buttonFw50.configure(foreground="#000000")
        self.buttonFw50.configure(highlightbackground="#d9d9d9")
        self.buttonFw50.configure(highlightcolor="black")
        self.buttonFw50.configure(pady="0")
        self.buttonFw50.configure(text='''50''')
        self.buttonFw50_tooltip = \
            ToolTip(self.buttonFw50, '''Immediate forward move 50mm relitive''')

        self.buttonLinHome = tk.Button(self.Labelframe2_1)
        self.buttonLinHome.place(relx=0.364, rely=0.594, height=24, width=47, bordermode='ignore')
        self.buttonLinHome.configure(activebackground="beige")
        self.buttonLinHome.configure(activeforeground="black")
        self.buttonLinHome.configure(background="#d9d9d9")
        self.buttonLinHome.configure(command=lambda: pdrobot_support.cb_buttonHome('LIN'))
        self.buttonLinHome.configure(compound='left')
        self.buttonLinHome.configure(disabledforeground="#a3a3a3")
        self.buttonLinHome.configure(foreground="#000000")
        self.buttonLinHome.configure(highlightbackground="#d9d9d9")
        self.buttonLinHome.configure(highlightcolor="black")
        self.buttonLinHome.configure(pady="0")
        self.buttonLinHome.configure(text='''Home''')

        self.buttonLinStop = tk.Button(self.Labelframe1)
        self.buttonLinStop.place(relx=0.436, rely=0.222, height=60, width=70, bordermode='ignore')
        self.buttonLinStop.configure(activebackground="beige")
        self.buttonLinStop.configure(activeforeground="black")
        self.buttonLinStop.configure(background="#d9d9d9")
        self.buttonLinStop.configure(command=lambda: pdrobot_support.cb_stop())
        self.buttonLinStop.configure(compound='left')
        self.buttonLinStop.configure(disabledforeground="#a3a3a3")
        self.buttonLinStop.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.buttonLinStop.configure(foreground="#000000")
        self.buttonLinStop.configure(highlightbackground="#d9d9d9")
        self.buttonLinStop.configure(highlightcolor="black")
        self.buttonLinStop.configure(pady="0")
        self.buttonLinStop.configure(text='''STOP''')

        self.Frame1 = tk.Frame(self.top)
        self.Frame1.place(relx=0.77, rely=0.429, relheight=0.157, relwidth=0.22)
        self.Frame1.configure(relief='flat')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")

        self.EntryAbsPos = tk.Entry(self.Frame1)
        self.EntryAbsPos.place(relx=0.045, rely=0.455, height=20, relwidth=0.455)
        self.EntryAbsPos.configure(background="white")
        self.EntryAbsPos.configure(disabledforeground="#a3a3a3")
        self.EntryAbsPos.configure(font="TkFixedFont")
        self.EntryAbsPos.configure(foreground="#000000")
        self.EntryAbsPos.configure(highlightbackground="#d9d9d9")
        self.EntryAbsPos.configure(highlightcolor="black")
        self.EntryAbsPos.configure(insertbackground="black")
        self.EntryAbsPos.configure(selectbackground="#c4c4c4")
        self.EntryAbsPos.configure(selectforeground="black")
        self.EntryAbsPos.configure(textvariable=self.absolutePos)
        self.EntryAbsRot = tk.Entry(self.Frame1)
        self.EntryAbsRot.place(relx=0.545, rely=0.455, height=20, relwidth=0.455)
        self.EntryAbsRot.configure(background="white")
        self.EntryAbsRot.configure(disabledforeground="#a3a3a3")
        self.EntryAbsRot.configure(font="TkFixedFont")
        self.EntryAbsRot.configure(foreground="#000000")
        self.EntryAbsRot.configure(highlightbackground="#d9d9d9")
        self.EntryAbsRot.configure(highlightcolor="black")
        self.EntryAbsRot.configure(insertbackground="black")
        self.EntryAbsRot.configure(selectbackground="#c4c4c4")
        self.EntryAbsRot.configure(selectforeground="black")
        self.EntryAbsRot.configure(textvariable=self.absoluteRot)

        self.Label2 = tk.Label(self.Frame1)
        self.Label2.place(relx=0.045, rely=0.273, height=21, width=60)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(anchor='w')
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Position''')

        self.Label3 = tk.Label(self.Frame1)
        self.Label3.place(relx=0.55, rely=0.273, height=21, width=60)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(anchor='w')
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(compound='left')
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Rotation''')

        self.Label4 = tk.Label(self.Frame1)
        self.Label4.place(relx=0, rely=0.091, height=21, relwidth=1)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(justify='right')
        self.Label4.configure(text='''Absolute Location''')

        self.Labelframe1_1 = tk.LabelFrame(self.top)
        self.Labelframe1_1.place(relx=0.033, rely=0.207, relheight=0.193, relwidth=0.917)
        self.Labelframe1_1.configure(relief='groove')
        self.Labelframe1_1.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.Labelframe1_1.configure(foreground="#000000")
        self.Labelframe1_1.configure(text='''Move Rotation Relative''')
        self.Labelframe1_1.configure(background="#d9d9d9")
        self.Labelframe1_1.configure(highlightbackground="#d9d9d9")
        self.Labelframe1_1.configure(highlightcolor="black")

        self.Labelframe2_2 = tk.LabelFrame(self.Labelframe1_1)
        self.Labelframe2_2.place(relx=0.018, rely=0.148, relheight=0.748, relwidth=0.4, bordermode='ignore')
        self.Labelframe2_2.configure(relief='groove')
        self.Labelframe2_2.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.Labelframe2_2.configure(foreground="#000000")
        self.Labelframe2_2.configure(text='''Rotate CCW''')
        self.Labelframe2_2.configure(background="#d9d9d9")
        self.Labelframe2_2.configure(highlightbackground="#d9d9d9")
        self.Labelframe2_2.configure(highlightcolor="black")

        self.buttonCCW90 = tk.Button(self.Labelframe2_2)
        self.buttonCCW90.place(relx=0.036, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonCCW90.configure(activebackground="beige")
        self.buttonCCW90.configure(activeforeground="black")
        self.buttonCCW90.configure(background="#d9d9d9")
        self.buttonCCW90.configure(command=lambda: pdrobot_support.cb_buttonRot(-90))
        self.buttonCCW90.configure(compound='left')
        self.buttonCCW90.configure(disabledforeground="#a3a3a3")
        self.buttonCCW90.configure(foreground="#000000")
        self.buttonCCW90.configure(highlightbackground="#d9d9d9")
        self.buttonCCW90.configure(highlightcolor="black")
        self.buttonCCW90.configure(pady="0")
        self.buttonCCW90.configure(text='''90''')
        self.buttonCCW90_tooltip = \
            ToolTip(self.buttonCCW90, '''Immedite CCW move 90° relative''')

        self.buttonCCW30 = tk.Button(self.Labelframe2_2)
        self.buttonCCW30.place(relx=0.273, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonCCW30.configure(activebackground="beige")
        self.buttonCCW30.configure(activeforeground="black")
        self.buttonCCW30.configure(background="#d9d9d9")
        self.buttonCCW30.configure(command=lambda: pdrobot_support.cb_buttonRot(-30))
        self.buttonCCW30.configure(compound='left')
        self.buttonCCW30.configure(disabledforeground="#a3a3a3")
        self.buttonCCW30.configure(foreground="#000000")
        self.buttonCCW30.configure(highlightbackground="#d9d9d9")
        self.buttonCCW30.configure(highlightcolor="black")
        self.buttonCCW30.configure(pady="0")
        self.buttonCCW30.configure(text='''30''')
        self.buttonCCW30_tooltip = \
            ToolTip(self.buttonCCW30, '''Immedite CCW move 30° relative''')

        self.buttonCCW5 = tk.Button(self.Labelframe2_2)
        self.buttonCCW5.place(relx=0.5, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonCCW5.configure(activebackground="beige")
        self.buttonCCW5.configure(activeforeground="black")
        self.buttonCCW5.configure(background="#d9d9d9")
        self.buttonCCW5.configure(command=lambda: pdrobot_support.cb_buttonRot(-5))
        self.buttonCCW5.configure(compound='left')
        self.buttonCCW5.configure(disabledforeground="#a3a3a3")
        self.buttonCCW5.configure(foreground="#000000")
        self.buttonCCW5.configure(highlightbackground="#d9d9d9")
        self.buttonCCW5.configure(highlightcolor="black")
        self.buttonCCW5.configure(pady="0")
        self.buttonCCW5.configure(text='''5''')
        self.buttonCCW5_tooltip = \
            ToolTip(self.buttonCCW5, '''Immedite CCW move 5° relative''')

        self.buttonCCW1 = tk.Button(self.Labelframe2_2)
        self.buttonCCW1.place(relx=0.727, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonCCW1.configure(activebackground="beige")
        self.buttonCCW1.configure(activeforeground="black")
        self.buttonCCW1.configure(background="#d9d9d9")
        self.buttonCCW1.configure(command=lambda: pdrobot_support.cb_buttonRot(-1))
        self.buttonCCW1.configure(compound='left')
        self.buttonCCW1.configure(disabledforeground="#a3a3a3")
        self.buttonCCW1.configure(foreground="#000000")
        self.buttonCCW1.configure(highlightbackground="#d9d9d9")
        self.buttonCCW1.configure(highlightcolor="black")
        self.buttonCCW1.configure(pady="0")
        self.buttonCCW1.configure(text='''1''')
        self.buttonCCW1_tooltip = \
            ToolTip(self.buttonCCW1, '''Immedite CCW move 1° relative''')

        self.scaleRotSpeed = tk.Scale(self.Labelframe2_2, from_=10, to=100.0, resolution=1.0)
        self.scaleRotSpeed.place(relx=0.25, rely=0.45, relheight=0.5, relwidth=0.7)
        self.scaleRotSpeed.configure(activebackground="beige")
        self.scaleRotSpeed.configure(background="#d9d9d9")
        self.scaleRotSpeed.configure(command=lambda v: pdrobot_support.cb_scaleRotSpeed(v))
        self.scaleRotSpeed.configure(foreground="#000000")
        self.scaleRotSpeed.configure(highlightbackground="#d9d9d9")
        self.scaleRotSpeed.configure(highlightcolor="black")
        self.scaleRotSpeed.configure(length="136")
        self.scaleRotSpeed.configure(orient="horizontal")
        self.scaleRotSpeed.configure(troughcolor="#d9d9d9")
        self.scaleRotSpeed.configure(variable=self.speedRot)
        self.speedRot.set(100)

        self.Label1_2 = tk.Label(self.Labelframe2_2)
        self.Label1_2.place(relx=0.01, rely=0.75, height=18, width=45, bordermode='ignore')
        self.Label1_2.configure(activebackground="#f9f9f9")
        self.Label1_2.configure(anchor='w')
        self.Label1_2.configure(background="#d9d9d9")
        self.Label1_2.configure(compound='left')
        self.Label1_2.configure(disabledforeground="#a3a3a3")
        self.Label1_2.configure(foreground="#000000")
        self.Label1_2.configure(highlightbackground="#d9d9d9")
        self.Label1_2.configure(highlightcolor="black")
        self.Label1_2.configure(text='''Speed''')

        self.Labelframe2_1_1 = tk.LabelFrame(self.Labelframe1_1)
        self.Labelframe2_1_1.place(relx=0.582, rely=0.148, relheight=0.748, relwidth=0.4, bordermode='ignore')
        self.Labelframe2_1_1.configure(relief='groove')
        self.Labelframe2_1_1.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.Labelframe2_1_1.configure(foreground="#000000")
        self.Labelframe2_1_1.configure(text='''Rotate CW''')
        self.Labelframe2_1_1.configure(background="#d9d9d9")
        self.Labelframe2_1_1.configure(highlightbackground="#d9d9d9")
        self.Labelframe2_1_1.configure(highlightcolor="black")

        self.buttonCW1 = tk.Button(self.Labelframe2_1_1)
        self.buttonCW1.place(relx=0.045, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonCW1.configure(activebackground="beige")
        self.buttonCW1.configure(activeforeground="black")
        self.buttonCW1.configure(background="#d9d9d9")
        self.buttonCW1.configure(command=lambda: pdrobot_support.cb_buttonRot(1))
        self.buttonCW1.configure(compound='left')
        self.buttonCW1.configure(disabledforeground="#a3a3a3")
        self.buttonCW1.configure(foreground="#000000")
        self.buttonCW1.configure(highlightbackground="#d9d9d9")
        self.buttonCW1.configure(highlightcolor="black")
        self.buttonCW1.configure(pady="0")
        self.buttonCW1.configure(text='''1''')
        self.buttonCW1_tooltip = \
            ToolTip(self.buttonCW1, '''Immedite CW move 1° relative''')

        self.buttonCW5 = tk.Button(self.Labelframe2_1_1)
        self.buttonCW5.place(relx=0.273, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonCW5.configure(activebackground="beige")
        self.buttonCW5.configure(activeforeground="black")
        self.buttonCW5.configure(background="#d9d9d9")
        self.buttonCW5.configure(command=lambda: pdrobot_support.cb_buttonRot(5))
        self.buttonCW5.configure(compound='left')
        self.buttonCW5.configure(disabledforeground="#a3a3a3")
        self.buttonCW5.configure(foreground="#000000")
        self.buttonCW5.configure(highlightbackground="#d9d9d9")
        self.buttonCW5.configure(highlightcolor="black")
        self.buttonCW5.configure(pady="0")
        self.buttonCW5.configure(text='''5''')
        self.buttonCW5_tooltip = \
            ToolTip(self.buttonCW5, '''Immedite CW move 5° relative''')

        self.buttonCW30 = tk.Button(self.Labelframe2_1_1)
        self.buttonCW30.place(relx=0.5, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonCW30.configure(activebackground="beige")
        self.buttonCW30.configure(activeforeground="black")
        self.buttonCW30.configure(background="#d9d9d9")
        self.buttonCW30.configure(command=lambda: pdrobot_support.cb_buttonRot(30))
        self.buttonCW30.configure(compound='left')
        self.buttonCW30.configure(disabledforeground="#a3a3a3")
        self.buttonCW30.configure(foreground="#000000")
        self.buttonCW30.configure(highlightbackground="#d9d9d9")
        self.buttonCW30.configure(highlightcolor="black")
        self.buttonCW30.configure(pady="0")
        self.buttonCW30.configure(text='''30''')
        self.buttonCW30_tooltip = \
            ToolTip(self.buttonCW30, '''Immedite CW move 30° relative''')

        self.buttonCW90 = tk.Button(self.Labelframe2_1_1)
        self.buttonCW90.place(relx=0.727, rely=0.198, height=24, width=47, bordermode='ignore')
        self.buttonCW90.configure(activebackground="beige")
        self.buttonCW90.configure(activeforeground="black")
        self.buttonCW90.configure(background="#d9d9d9")
        self.buttonCW90.configure(command=lambda: pdrobot_support.cb_buttonRot(90))
        self.buttonCW90.configure(compound='left')
        self.buttonCW90.configure(disabledforeground="#a3a3a3")
        self.buttonCW90.configure(foreground="#000000")
        self.buttonCW90.configure(highlightbackground="#d9d9d9")
        self.buttonCW90.configure(highlightcolor="black")
        self.buttonCW90.configure(pady="0")
        self.buttonCW90.configure(text='''90''')
        self.buttonCW90_tooltip = \
            ToolTip(self.buttonCW90, '''Immedite CW move 90° relative''')

        self.buttonRotHome = tk.Button(self.Labelframe2_1_1)
        self.buttonRotHome.place(relx=0.364, rely=0.594, height=24, width=47, bordermode='ignore')
        self.buttonRotHome.configure(activebackground="beige")
        self.buttonRotHome.configure(activeforeground="black")
        self.buttonRotHome.configure(background="#d9d9d9")
        self.buttonRotHome.configure(command=lambda: pdrobot_support.cb_buttonHome('ROT'))
        self.buttonRotHome.configure(compound='left')
        self.buttonRotHome.configure(disabledforeground="#a3a3a3")
        self.buttonRotHome.configure(foreground="#000000")
        self.buttonRotHome.configure(highlightbackground="#d9d9d9")
        self.buttonRotHome.configure(highlightcolor="black")
        self.buttonRotHome.configure(overrelief="raised")
        self.buttonRotHome.configure(pady="0")
        self.buttonRotHome.configure(text='''Home''')

        self.buttonRotStop = tk.Button(self.Labelframe1_1)
        self.buttonRotStop.place(relx=0.436, rely=0.222, height=60, width=70, bordermode='ignore')
        self.buttonRotStop.configure(activebackground="beige")
        self.buttonRotStop.configure(activeforeground="black")
        self.buttonRotStop.configure(background="#d9d9d9")
        self.buttonRotStop.configure(command=lambda: pdrobot_support.cb_stop())
        self.buttonRotStop.configure(compound='left')
        self.buttonRotStop.configure(disabledforeground="#a3a3a3")
        self.buttonRotStop.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.buttonRotStop.configure(foreground="#000000")
        self.buttonRotStop.configure(highlightbackground="#d9d9d9")
        self.buttonRotStop.configure(highlightcolor="black")
        self.buttonRotStop.configure(pady="0")
        self.buttonRotStop.configure(text='''STOP''')

        self.menubar = tk.Menu(top, font="TkMenuFont", bg=_bgcolor, fg=_fgcolor)
        top.configure(menu=self.menubar)

        self.Labelframe3 = tk.LabelFrame(self.top)
        self.Labelframe3.place(relx=0.008, rely=0.407, relheight=0.193, relwidth=0.75)
        self.Labelframe3.configure(relief='flat')
        self.Labelframe3.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.Labelframe3.configure(foreground="#000000")
        self.Labelframe3.configure(relief="flat")
        self.Labelframe3.configure(text='''Waypoints''')
        self.Labelframe3.configure(background="#d9d9d9")
        self.Labelframe3.configure(highlightbackground="#d9d9d9")
        self.Labelframe3.configure(highlightcolor="black")

        self.Frame1_1 = tk.Frame(self.Labelframe3)
        self.Frame1_1.place(relx=0.022, rely=0.148, relheight=0.815, relwidth=0.244, bordermode='ignore')
        self.Frame1_1.configure(relief='groove')
        self.Frame1_1.configure(borderwidth="2")
        self.Frame1_1.configure(relief="groove")
        self.Frame1_1.configure(background="#d9d9d9")
        self.Frame1_1.configure(highlightbackground="#d9d9d9")
        self.Frame1_1.configure(highlightcolor="black")

        self.buttonSetWp1 = tk.Button(self.Frame1_1)
        self.buttonSetWp1.place(relx=0.3, rely=0.045, height=24, width=47)
        self.buttonSetWp1.configure(activebackground="beige")
        self.buttonSetWp1.configure(activeforeground="black")
        self.buttonSetWp1.configure(background="#d9d9d9")
        self.buttonSetWp1.configure(command=lambda: pdrobot_support.cb_waypoint(1, self.absolutePos, self.absoluteRot))
        self.buttonSetWp1.configure(compound='left')
        self.buttonSetWp1.configure(disabledforeground="#a3a3a3")
        self.buttonSetWp1.configure(foreground="#000000")
        self.buttonSetWp1.configure(highlightbackground="#d9d9d9")
        self.buttonSetWp1.configure(highlightcolor="black")
        self.buttonSetWp1.configure(pady="0")
        self.buttonSetWp1.configure(text='''Set 1''')
        self.buttonSetWp1_tooltip = \
            ToolTip(self.buttonSetWp1, '''Set a waypoint at the location below''')

        self.EntryPosWp1 = tk.Entry(self.Frame1_1)
        self.EntryPosWp1.place(relx=0.045, rely=0.455, height=20, relwidth=0.455)
        self.EntryPosWp1.configure(background="white")
        self.EntryPosWp1.configure(disabledforeground="#a3a3a3")
        self.EntryPosWp1.configure(font="TkFixedFont")
        self.EntryPosWp1.configure(foreground="#000000")
        self.EntryPosWp1.configure(highlightbackground="#d9d9d9")
        self.EntryPosWp1.configure(highlightcolor="black")
        self.EntryPosWp1.configure(insertbackground="black")
        self.EntryPosWp1.configure(selectbackground="#c4c4c4")
        self.EntryPosWp1.configure(selectforeground="black")
        self.EntryPosWp1.configure(textvariable=self.set1_pos)

        self.EntryRotWp1 = tk.Entry(self.Frame1_1)
        self.EntryRotWp1.place(relx=0.5, rely=0.455, height=20, relwidth=0.455)
        self.EntryRotWp1.configure(background="white")
        self.EntryRotWp1.configure(disabledforeground="#a3a3a3")
        self.EntryRotWp1.configure(font="TkFixedFont")
        self.EntryRotWp1.configure(foreground="#000000")
        self.EntryRotWp1.configure(highlightbackground="#d9d9d9")
        self.EntryRotWp1.configure(highlightcolor="black")
        self.EntryRotWp1.configure(insertbackground="black")
        self.EntryRotWp1.configure(selectbackground="#c4c4c4")
        self.EntryRotWp1.configure(selectforeground="black")
        self.EntryRotWp1.configure(textvariable=self.set1_rot)

        self.Label2_1 = tk.Label(self.Frame1_1)
        self.Label2_1.place(relx=0.045, rely=0.273, height=21, relwidth=0.455)
        self.Label2_1.configure(activebackground="#f9f9f9")
        self.Label2_1.configure(anchor='w')
        self.Label2_1.configure(background="#d9d9d9")
        self.Label2_1.configure(compound='left')
        self.Label2_1.configure(disabledforeground="#a3a3a3")
        self.Label2_1.configure(foreground="#000000")
        self.Label2_1.configure(highlightbackground="#d9d9d9")
        self.Label2_1.configure(highlightcolor="black")
        self.Label2_1.configure(text='''Position''')

        self.Label3_1 = tk.Label(self.Frame1_1)
        self.Label3_1.place(relx=0.5, rely=0.273, height=21, relwidth=0.455)
        self.Label3_1.configure(activebackground="#f9f9f9")
        self.Label3_1.configure(anchor='w')
        self.Label3_1.configure(background="#d9d9d9")
        self.Label3_1.configure(compound='left')
        self.Label3_1.configure(disabledforeground="#a3a3a3")
        self.Label3_1.configure(foreground="#000000")
        self.Label3_1.configure(highlightbackground="#d9d9d9")
        self.Label3_1.configure(highlightcolor="black")
        self.Label3_1.configure(text='''Rotation''')

        self.ButtonGoWp1 = tk.Button(self.Frame1_1)
        self.ButtonGoWp1.place(relx=0.636, rely=0.727, height=24, width=26)
        self.ButtonGoWp1.configure(activebackground="beige")
        self.ButtonGoWp1.configure(activeforeground="black")
        self.ButtonGoWp1.configure(background="#d9d9d9")
        self.ButtonGoWp1.configure(command=lambda: pdrobot_support.cb_go(1, self.set1_pos, self.set1_rot))
        self.ButtonGoWp1.configure(compound='left')
        self.ButtonGoWp1.configure(disabledforeground="#a3a3a3")
        self.ButtonGoWp1.configure(foreground="#000000")
        self.ButtonGoWp1.configure(highlightbackground="#d9d9d9")
        self.ButtonGoWp1.configure(highlightcolor="black")
        self.ButtonGoWp1.configure(pady="0")
        self.ButtonGoWp1.configure(text='''Go''')

        self.Checkbutton1 = tk.Checkbutton(self.Frame1_1)
        self.Checkbutton1.place(relx=0.009, rely=0.727, relheight=0.227, relwidth=0.555)
        self.Checkbutton1.configure(activebackground="beige")
        self.Checkbutton1.configure(activeforeground="black")
        self.Checkbutton1.configure(anchor='w')
        self.Checkbutton1.configure(background="#d9d9d9")
        self.Checkbutton1.configure(command=lambda: pdrobot_support.cb_toggle_wp_set(self.set1_locked.get(), self.buttonSetWp1))
        self.Checkbutton1.configure(compound='left')
        self.Checkbutton1.configure(disabledforeground="#a3a3a3")
        self.Checkbutton1.configure(foreground="#000000")
        self.Checkbutton1.configure(highlightbackground="#d9d9d9")
        self.Checkbutton1.configure(highlightcolor="black")
        self.Checkbutton1.configure(justify='left')
        self.Checkbutton1.configure(offrelief="groove")
        self.Checkbutton1.configure(overrelief="ridge")
        self.Checkbutton1.configure(relief="groove")
        self.Checkbutton1.configure(selectcolor="#d9d9d9")
        self.Checkbutton1.configure(text='''Lock''')
        self.Checkbutton1.configure(variable=self.set1_locked)
        self.Checkbutton1_tooltip = \
            ToolTip(self.Checkbutton1, '''Lock to disable Waypoint Set''')

        self.Frame1_2 = tk.Frame(self.Labelframe3)
        self.Frame1_2.place(relx=0.267, rely=0.148, relheight=0.815, relwidth=0.244, bordermode='ignore')
        self.Frame1_2.configure(relief='groove')
        self.Frame1_2.configure(borderwidth="2")
        self.Frame1_2.configure(relief="groove")
        self.Frame1_2.configure(background="#d9d9d9")
        self.Frame1_2.configure(highlightbackground="#d9d9d9")
        self.Frame1_2.configure(highlightcolor="black")

        self.buttonSetWp2 = tk.Button(self.Frame1_2)
        self.buttonSetWp2.place(relx=0.3, rely=0.045, height=24, width=47)
        self.buttonSetWp2.configure(activebackground="beige")
        self.buttonSetWp2.configure(activeforeground="black")
        self.buttonSetWp2.configure(background="#d9d9d9")
        self.buttonSetWp2.configure(command=lambda: pdrobot_support.cb_waypoint(2, self.absolutePos, self.absoluteRot))
        self.buttonSetWp2.configure(compound='left')
        self.buttonSetWp2.configure(disabledforeground="#a3a3a3")
        self.buttonSetWp2.configure(foreground="#000000")
        self.buttonSetWp2.configure(highlightbackground="#d9d9d9")
        self.buttonSetWp2.configure(highlightcolor="black")
        self.buttonSetWp2.configure(pady="0")
        self.buttonSetWp2.configure(text='''Set 2''')
        self.buttonSetWp2_tooltip = \
            ToolTip(self.buttonSetWp2, '''Set a waypoint at the location below''')

        self.EntryPosWp2 = tk.Entry(self.Frame1_2)
        self.EntryPosWp2.place(relx=0.045, rely=0.455, height=20, relwidth=0.455)
        self.EntryPosWp2.configure(background="white")
        self.EntryPosWp2.configure(disabledforeground="#a3a3a3")
        self.EntryPosWp2.configure(font="TkFixedFont")
        self.EntryPosWp2.configure(foreground="#000000")
        self.EntryPosWp2.configure(highlightbackground="#d9d9d9")
        self.EntryPosWp2.configure(highlightcolor="black")
        self.EntryPosWp2.configure(insertbackground="black")
        self.EntryPosWp2.configure(selectbackground="#c4c4c4")
        self.EntryPosWp2.configure(selectforeground="black")
        self.EntryPosWp2.configure(textvariable=self.set2_pos)

        self.EntryRotWp2 = tk.Entry(self.Frame1_2)
        self.EntryRotWp2.place(relx=0.5, rely=0.455, height=20, relwidth=0.455)
        self.EntryRotWp2.configure(background="white")
        self.EntryRotWp2.configure(disabledforeground="#a3a3a3")
        self.EntryRotWp2.configure(font="TkFixedFont")
        self.EntryRotWp2.configure(foreground="#000000")
        self.EntryRotWp2.configure(highlightbackground="#d9d9d9")
        self.EntryRotWp2.configure(highlightcolor="black")
        self.EntryRotWp2.configure(insertbackground="black")
        self.EntryRotWp2.configure(selectbackground="#c4c4c4")
        self.EntryRotWp2.configure(selectforeground="black")
        self.EntryRotWp2.configure(textvariable=self.set2_rot)

        self.Label2_2 = tk.Label(self.Frame1_2)
        self.Label2_2.place(relx=0.045, rely=0.273, height=21, relwidth=0.455)
        self.Label2_2.configure(activebackground="#f9f9f9")
        self.Label2_2.configure(anchor='w')
        self.Label2_2.configure(background="#d9d9d9")
        self.Label2_2.configure(compound='left')
        self.Label2_2.configure(disabledforeground="#a3a3a3")
        self.Label2_2.configure(foreground="#000000")
        self.Label2_2.configure(highlightbackground="#d9d9d9")
        self.Label2_2.configure(highlightcolor="black")
        self.Label2_2.configure(text='''Position''')

        self.Label3_2 = tk.Label(self.Frame1_2)
        self.Label3_2.place(relx=0.5, rely=0.273, height=21, relwidth=0.455)
        self.Label3_2.configure(activebackground="#f9f9f9")
        self.Label3_2.configure(anchor='w')
        self.Label3_2.configure(background="#d9d9d9")
        self.Label3_2.configure(compound='left')
        self.Label3_2.configure(disabledforeground="#a3a3a3")
        self.Label3_2.configure(foreground="#000000")
        self.Label3_2.configure(highlightbackground="#d9d9d9")
        self.Label3_2.configure(highlightcolor="black")
        self.Label3_2.configure(text='''Rotation''')

        self.ButtonGoWp2 = tk.Button(self.Frame1_2)
        self.ButtonGoWp2.place(relx=0.636, rely=0.727, height=24, width=26)
        self.ButtonGoWp2.configure(activebackground="beige")
        self.ButtonGoWp2.configure(activeforeground="black")
        self.ButtonGoWp2.configure(background="#d9d9d9")
        self.ButtonGoWp2.configure(command=lambda: pdrobot_support.cb_go(2, self.set2_pos, self.set2_rot))
        self.ButtonGoWp2.configure(compound='left')
        self.ButtonGoWp2.configure(disabledforeground="#a3a3a3")
        self.ButtonGoWp2.configure(foreground="#000000")
        self.ButtonGoWp2.configure(highlightbackground="#d9d9d9")
        self.ButtonGoWp2.configure(highlightcolor="black")
        self.ButtonGoWp2.configure(pady="0")
        self.ButtonGoWp2.configure(text='''Go''')

        self.Checkbutton2 = tk.Checkbutton(self.Frame1_2)
        self.Checkbutton2.place(relx=0.009, rely=0.727, relheight=0.227, relwidth=0.555)
        self.Checkbutton2.configure(activebackground="beige")
        self.Checkbutton2.configure(activeforeground="black")
        self.Checkbutton2.configure(anchor='w')
        self.Checkbutton2.configure(background="#d9d9d9")
        self.Checkbutton2.configure(command=lambda: pdrobot_support.cb_toggle_wp_set(self.set2_locked.get(), self.buttonSetWp2))
        self.Checkbutton2.configure(compound='left')
        self.Checkbutton2.configure(disabledforeground="#a3a3a3")
        self.Checkbutton2.configure(foreground="#000000")
        self.Checkbutton2.configure(highlightbackground="#d9d9d9")
        self.Checkbutton2.configure(highlightcolor="black")
        self.Checkbutton2.configure(justify='left')
        self.Checkbutton2.configure(offrelief="groove")
        self.Checkbutton2.configure(overrelief="ridge")
        self.Checkbutton2.configure(relief="groove")
        self.Checkbutton2.configure(selectcolor="#d9d9d9")
        self.Checkbutton2.configure(text='''Lock''')
        self.Checkbutton2.configure(variable=self.set2_locked)
        self.Checkbutton2_tooltip = \
            ToolTip(self.Checkbutton1, '''Lock to disable Waypoint Set''')

        self.Frame1_3 = tk.Frame(self.Labelframe3)
        self.Frame1_3.place(relx=0.511, rely=0.148, relheight=0.815, relwidth=0.244, bordermode='ignore')
        self.Frame1_3.configure(relief='groove')
        self.Frame1_3.configure(borderwidth="2")
        self.Frame1_3.configure(relief="groove")
        self.Frame1_3.configure(background="#d9d9d9")
        self.Frame1_3.configure(highlightbackground="#d9d9d9")
        self.Frame1_3.configure(highlightcolor="black")

        self.buttonSetWp3 = tk.Button(self.Frame1_3)
        self.buttonSetWp3.place(relx=0.3, rely=0.045, height=24, width=47)
        self.buttonSetWp3.configure(activebackground="beige")
        self.buttonSetWp3.configure(activeforeground="black")
        self.buttonSetWp3.configure(background="#d9d9d9")
        self.buttonSetWp3.configure(command=lambda: pdrobot_support.cb_waypoint(3, self.absolutePos, self.absoluteRot))
        self.buttonSetWp3.configure(compound='left')
        self.buttonSetWp3.configure(disabledforeground="#a3a3a3")
        self.buttonSetWp3.configure(foreground="#000000")
        self.buttonSetWp3.configure(highlightbackground="#d9d9d9")
        self.buttonSetWp3.configure(highlightcolor="black")
        self.buttonSetWp3.configure(pady="0")
        self.buttonSetWp3.configure(text='''Set 3''')
        self.buttonSetWp3_tooltip = \
            ToolTip(self.buttonSetWp3, '''Set a waypoint at the location below''')

        self.EntryPosWp3 = tk.Entry(self.Frame1_3)
        self.EntryPosWp3.place(relx=0.045, rely=0.455, height=20, relwidth=0.455)
        self.EntryPosWp3.configure(background="white")
        self.EntryPosWp3.configure(disabledforeground="#a3a3a3")
        self.EntryPosWp3.configure(font="TkFixedFont")
        self.EntryPosWp3.configure(foreground="#000000")
        self.EntryPosWp3.configure(highlightbackground="#d9d9d9")
        self.EntryPosWp3.configure(highlightcolor="black")
        self.EntryPosWp3.configure(insertbackground="black")
        self.EntryPosWp3.configure(selectbackground="#c4c4c4")
        self.EntryPosWp3.configure(selectforeground="black")
        self.EntryPosWp3.configure(textvariable=self.set3_pos)

        self.EntryRotWp3 = tk.Entry(self.Frame1_3)
        self.EntryRotWp3.place(relx=0.5, rely=0.455, height=20, relwidth=0.455)
        self.EntryRotWp3.configure(background="white")
        self.EntryRotWp3.configure(disabledforeground="#a3a3a3")
        self.EntryRotWp3.configure(font="TkFixedFont")
        self.EntryRotWp3.configure(foreground="#000000")
        self.EntryRotWp3.configure(highlightbackground="#d9d9d9")
        self.EntryRotWp3.configure(highlightcolor="black")
        self.EntryRotWp3.configure(insertbackground="black")
        self.EntryRotWp3.configure(selectbackground="#c4c4c4")
        self.EntryRotWp3.configure(selectforeground="black")
        self.EntryRotWp3.configure(textvariable=self.set3_rot)

        self.Label2_3 = tk.Label(self.Frame1_3)
        self.Label2_3.place(relx=0.045, rely=0.273, height=21, relwidth=0.455)
        self.Label2_3.configure(activebackground="#f9f9f9")
        self.Label2_3.configure(anchor='w')
        self.Label2_3.configure(background="#d9d9d9")
        self.Label2_3.configure(compound='left')
        self.Label2_3.configure(disabledforeground="#a3a3a3")
        self.Label2_3.configure(foreground="#000000")
        self.Label2_3.configure(highlightbackground="#d9d9d9")
        self.Label2_3.configure(highlightcolor="black")
        self.Label2_3.configure(text='''Position''')

        self.Label3_3 = tk.Label(self.Frame1_3)
        self.Label3_3.place(relx=0.5, rely=0.273, height=21, relwidth=0.455)
        self.Label3_3.configure(activebackground="#f9f9f9")
        self.Label3_3.configure(anchor='w')
        self.Label3_3.configure(background="#d9d9d9")
        self.Label3_3.configure(compound='left')
        self.Label3_3.configure(disabledforeground="#a3a3a3")
        self.Label3_3.configure(foreground="#000000")
        self.Label3_3.configure(highlightbackground="#d9d9d9")
        self.Label3_3.configure(highlightcolor="black")
        self.Label3_3.configure(text='''Rotation''')

        self.ButtonGoWp3 = tk.Button(self.Frame1_3)
        self.ButtonGoWp3.place(relx=0.636, rely=0.727, height=24, width=26)
        self.ButtonGoWp3.configure(activebackground="beige")
        self.ButtonGoWp3.configure(activeforeground="black")
        self.ButtonGoWp3.configure(background="#d9d9d9")
        self.ButtonGoWp3.configure(command=lambda: pdrobot_support.cb_go(3, self.set3_pos, self.set3_rot))
        self.ButtonGoWp3.configure(compound='left')
        self.ButtonGoWp3.configure(disabledforeground="#a3a3a3")
        self.ButtonGoWp3.configure(foreground="#000000")
        self.ButtonGoWp3.configure(highlightbackground="#d9d9d9")
        self.ButtonGoWp3.configure(highlightcolor="black")
        self.ButtonGoWp3.configure(pady="0")
        self.ButtonGoWp3.configure(text='''Go''')

        self.Checkbutton3 = tk.Checkbutton(self.Frame1_3)
        self.Checkbutton3.place(relx=0.009, rely=0.727, relheight=0.227, relwidth=0.555)
        self.Checkbutton3.configure(activebackground="beige")
        self.Checkbutton3.configure(activeforeground="black")
        self.Checkbutton3.configure(anchor='w')
        self.Checkbutton3.configure(background="#d9d9d9")
        self.Checkbutton3.configure(command=lambda: pdrobot_support.cb_toggle_wp_set(self.set3_locked.get(), self.buttonSetWp3))
        self.Checkbutton3.configure(compound='left')
        self.Checkbutton3.configure(disabledforeground="#a3a3a3")
        self.Checkbutton3.configure(foreground="#000000")
        self.Checkbutton3.configure(highlightbackground="#d9d9d9")
        self.Checkbutton3.configure(highlightcolor="black")
        self.Checkbutton3.configure(justify='left')
        self.Checkbutton3.configure(offrelief="groove")
        self.Checkbutton3.configure(overrelief="ridge")
        self.Checkbutton3.configure(relief="groove")
        self.Checkbutton3.configure(selectcolor="#d9d9d9")
        self.Checkbutton3.configure(text='''Lock''')
        self.Checkbutton3.configure(variable=self.set3_locked)
        self.Checkbutton3_tooltip = \
            ToolTip(self.Checkbutton1, '''Lock to disable Waypoint Set''')

        self.Frame1_4 = tk.Frame(self.Labelframe3)
        self.Frame1_4.place(relx=0.756, rely=0.148, relheight=0.815, relwidth=0.244, bordermode='ignore')
        self.Frame1_4.configure(relief='groove')
        self.Frame1_4.configure(borderwidth="2")
        self.Frame1_4.configure(relief="groove")
        self.Frame1_4.configure(background="#d9d9d9")
        self.Frame1_4.configure(highlightbackground="#d9d9d9")
        self.Frame1_4.configure(highlightcolor="black")

        self.buttonSetWp4 = tk.Button(self.Frame1_4)
        self.buttonSetWp4.place(relx=0.3, rely=0.045, height=24, width=47)
        self.buttonSetWp4.configure(activebackground="beige")
        self.buttonSetWp4.configure(activeforeground="black")
        self.buttonSetWp4.configure(background="#d9d9d9")
        self.buttonSetWp4.configure(command=lambda: pdrobot_support.cb_waypoint(4, self.absolutePos, self.absoluteRot))
        self.buttonSetWp4.configure(compound='left')
        self.buttonSetWp4.configure(disabledforeground="#a3a3a3")
        self.buttonSetWp4.configure(foreground="#000000")
        self.buttonSetWp4.configure(highlightbackground="#d9d9d9")
        self.buttonSetWp4.configure(highlightcolor="black")
        self.buttonSetWp4.configure(pady="0")
        self.buttonSetWp4.configure(text='''Set 4''')
        self.buttonSetWp4_tooltip = \
            ToolTip(self.buttonSetWp4, '''Set a waypoint at the location below''')

        self.EntryPosWp4 = tk.Entry(self.Frame1_4)
        self.EntryPosWp4.place(relx=0.045, rely=0.455, height=20, relwidth=0.455)
        self.EntryPosWp4.configure(background="white")
        self.EntryPosWp4.configure(disabledforeground="#a3a3a3")
        self.EntryPosWp4.configure(font="TkFixedFont")
        self.EntryPosWp4.configure(foreground="#000000")
        self.EntryPosWp4.configure(highlightbackground="#d9d9d9")
        self.EntryPosWp4.configure(highlightcolor="black")
        self.EntryPosWp4.configure(insertbackground="black")
        self.EntryPosWp4.configure(selectbackground="#c4c4c4")
        self.EntryPosWp4.configure(selectforeground="black")
        self.EntryPosWp4.configure(textvariable=self.set4_pos)

        self.EntryRotWp4 = tk.Entry(self.Frame1_4)
        self.EntryRotWp4.place(relx=0.5, rely=0.455, height=20, relwidth=0.455)
        self.EntryRotWp4.configure(background="white")
        self.EntryRotWp4.configure(disabledforeground="#a3a3a3")
        self.EntryRotWp4.configure(font="TkFixedFont")
        self.EntryRotWp4.configure(foreground="#000000")
        self.EntryRotWp4.configure(highlightbackground="#d9d9d9")
        self.EntryRotWp4.configure(highlightcolor="black")
        self.EntryRotWp4.configure(insertbackground="black")
        self.EntryRotWp4.configure(selectbackground="#c4c4c4")
        self.EntryRotWp4.configure(selectforeground="black")
        self.EntryRotWp4.configure(textvariable=self.set4_rot)

        self.Label2_4 = tk.Label(self.Frame1_4)
        self.Label2_4.place(relx=0.045, rely=0.273, height=21, relwidth=0.455)
        self.Label2_4.configure(activebackground="#f9f9f9")
        self.Label2_4.configure(anchor='w')
        self.Label2_4.configure(background="#d9d9d9")
        self.Label2_4.configure(compound='left')
        self.Label2_4.configure(disabledforeground="#a3a3a3")
        self.Label2_4.configure(foreground="#000000")
        self.Label2_4.configure(highlightbackground="#d9d9d9")
        self.Label2_4.configure(highlightcolor="black")
        self.Label2_4.configure(text='''Position''')

        self.Label3_4 = tk.Label(self.Frame1_4)
        self.Label3_4.place(relx=0.5, rely=0.273, height=21, relwidth=0.455)
        self.Label3_4.configure(activebackground="#f9f9f9")
        self.Label3_4.configure(anchor='w')
        self.Label3_4.configure(background="#d9d9d9")
        self.Label3_4.configure(compound='left')
        self.Label3_4.configure(disabledforeground="#a3a3a3")
        self.Label3_4.configure(foreground="#000000")
        self.Label3_4.configure(highlightbackground="#d9d9d9")
        self.Label3_4.configure(highlightcolor="black")
        self.Label3_4.configure(text='''Rotation''')

        self.ButtonGoWp4 = tk.Button(self.Frame1_4)
        self.ButtonGoWp4.place(relx=0.636, rely=0.727, height=24, width=26)
        self.ButtonGoWp4.configure(activebackground="beige")
        self.ButtonGoWp4.configure(activeforeground="black")
        self.ButtonGoWp4.configure(background="#d9d9d9")
        self.ButtonGoWp4.configure(command=lambda: pdrobot_support.cb_go(4, self.set4_pos, self.set4_rot))
        self.ButtonGoWp4.configure(compound='left')
        self.ButtonGoWp4.configure(disabledforeground="#a3a3a3")
        self.ButtonGoWp4.configure(foreground="#000000")
        self.ButtonGoWp4.configure(highlightbackground="#d9d9d9")
        self.ButtonGoWp4.configure(highlightcolor="black")
        self.ButtonGoWp4.configure(pady="0")
        self.ButtonGoWp4.configure(text='''Go''')

        self.Checkbutton4 = tk.Checkbutton(self.Frame1_4)
        self.Checkbutton4.place(relx=0.009, rely=0.727, relheight=0.227, relwidth=0.555)
        self.Checkbutton4.configure(activebackground="beige")
        self.Checkbutton4.configure(activeforeground="black")
        self.Checkbutton4.configure(anchor='w')
        self.Checkbutton4.configure(background="#d9d9d9")
        self.Checkbutton4.configure(command=lambda: pdrobot_support.cb_toggle_wp_set(self.set4_locked.get(), self.buttonSetWp4))
        self.Checkbutton4.configure(compound='left')
        self.Checkbutton4.configure(disabledforeground="#a3a3a3")
        self.Checkbutton4.configure(foreground="#000000")
        self.Checkbutton4.configure(highlightbackground="#d9d9d9")
        self.Checkbutton4.configure(highlightcolor="black")
        self.Checkbutton4.configure(justify='left')
        self.Checkbutton4.configure(offrelief="groove")
        self.Checkbutton4.configure(overrelief="ridge")
        self.Checkbutton4.configure(relief="groove")
        self.Checkbutton4.configure(selectcolor="#d9d9d9")
        self.Checkbutton4.configure(text='''Lock''')
        self.Checkbutton4.configure(variable=self.set4_locked)
        self.Checkbutton4_tooltip = \
            ToolTip(self.Checkbutton1, '''Lock to disable Waypoint Set''')

        self.Labelframe4 = tk.LabelFrame(self.top)
        self.Labelframe4.place(relx=0.033, rely=0.857, relheight=0.107, relwidth=0.9)
        self.Labelframe4.configure(relief='groove')
        self.Labelframe4.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.Labelframe4.configure(foreground="#000000")
        self.Labelframe4.configure(text='''Load Program File''')
        self.Labelframe4.configure(background="#d9d9d9")
        self.Labelframe4.configure(highlightbackground="#d9d9d9")
        self.Labelframe4.configure(highlightcolor="black")

        self.Label5 = tk.Label(self.Labelframe4)
        self.Label5.place(relx=0.010, rely=0.267, height=21, width=68, bordermode='ignore')
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(anchor='w')
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(compound='left')
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''File Name''')

        self.EntryFile = tk.Entry(self.Labelframe4)
        self.EntryFile.place(relx=0.13, rely=0.267, height=20, relwidth=0.778, bordermode='ignore')
        self.EntryFile.configure(background="white")
        self.EntryFile.configure(disabledforeground="#a3a3a3")
        self.EntryFile.configure(font="TkFixedFont")
        self.EntryFile.configure(foreground="#000000")
        self.EntryFile.configure(highlightbackground="#d9d9d9")
        self.EntryFile.configure(highlightcolor="black")
        self.EntryFile.configure(insertbackground="black")
        self.EntryFile.configure(selectbackground="#c4c4c4")
        self.EntryFile.configure(selectforeground="black")
        self.EntryFile.configure(textvariable=self.dg_filename)

        self.ButtonCancelFile = tk.Button(self.Labelframe4)
        self.ButtonCancelFile.place(relx=0.63, rely=0.6, height=24, width=50, bordermode='ignore')
        self.ButtonCancelFile.configure(activebackground="beige")
        self.ButtonCancelFile.configure(activeforeground="black")
        self.ButtonCancelFile.configure(background="#d9d9d9")
        self.ButtonCancelFile.configure(command=pdrobot_support.cb_cancel_file)
        self.ButtonCancelFile.configure(compound='left')
        self.ButtonCancelFile.configure(disabledforeground="#a3a3a3")
        self.ButtonCancelFile.configure(foreground="#000000")
        self.ButtonCancelFile.configure(highlightbackground="#d9d9d9")
        self.ButtonCancelFile.configure(highlightcolor="black")
        self.ButtonCancelFile.configure(pady="0")
        self.ButtonCancelFile.configure(text='''Cancel''')
        self.run_halt = False

        self.ButtonexitFile = tk.Button(self.Labelframe4)
        self.ButtonexitFile.place(relx=0.796, rely=0.6, height=24, width=50, bordermode='ignore')
        self.ButtonexitFile.configure(activebackground="beige")
        self.ButtonexitFile.configure(activeforeground="black")
        self.ButtonexitFile.configure(background="#d9d9d9")
        self.ButtonexitFile.configure(command=pdrobot_support.cb_exit_program)
        self.ButtonexitFile.configure(compound='left')
        self.ButtonexitFile.configure(disabledforeground="#a3a3a3")
        self.ButtonexitFile.configure(foreground="#000000")
        self.ButtonexitFile.configure(highlightbackground="#d9d9d9")
        self.ButtonexitFile.configure(highlightcolor="black")
        self.ButtonexitFile.configure(pady="0")
        self.ButtonexitFile.configure(text='''Exit''')

        self.ButtonRunProg = tk.Button(self.Labelframe4)
        self.ButtonRunProg.place(relx=0.13, rely=0.6, height=24, width=50, bordermode='ignore')
        self.ButtonRunProg.configure(activebackground="beige")
        self.ButtonRunProg.configure(activeforeground="black")
        self.ButtonRunProg.configure(background="#d9d9d9")
        self.ButtonRunProg.configure(command=lambda: pdrobot_support.cb_run_program(self.Listbox1))
        self.ButtonRunProg.configure(compound='left')
        self.ButtonRunProg.configure(disabledforeground="#a3a3a3")
        self.ButtonRunProg.configure(foreground="#000000")
        self.ButtonRunProg.configure(highlightbackground="#d9d9d9")
        self.ButtonRunProg.configure(highlightcolor="black")
        self.ButtonRunProg.configure(pady="0")
        self.ButtonRunProg.configure(state='disabled')
        self.ButtonRunProg.configure(text='''Run''')

        self.ButtonStepProg = tk.Button(self.Labelframe4)
        self.ButtonStepProg.place(relx=0.259, rely=0.6, height=24, width=50, bordermode='ignore')
        self.ButtonStepProg.configure(activebackground="beige")
        self.ButtonStepProg.configure(activeforeground="black")
        self.ButtonStepProg.configure(background="#d9d9d9")
        self.ButtonStepProg.configure(command=lambda: pdrobot_support.cb_step_program(self.Listbox1))
        self.ButtonStepProg.configure(compound='left')
        self.ButtonStepProg.configure(disabledforeground="#a3a3a3")
        self.ButtonStepProg.configure(foreground="#000000")
        self.ButtonStepProg.configure(highlightbackground="#d9d9d9")
        self.ButtonStepProg.configure(highlightcolor="black")
        self.ButtonStepProg.configure(pady="0")
        self.ButtonStepProg.configure(state='disabled')
        self.ButtonStepProg.configure(text='''Step''')

        self.ButtonEditProg = tk.Button(self.Labelframe4)
        self.ButtonEditProg.place(relx=0.505, rely=0.6, height=24, width=50, bordermode='ignore')
        self.ButtonEditProg.configure(activebackground="beige")
        self.ButtonEditProg.configure(activeforeground="black")
        self.ButtonEditProg.configure(background="#d9d9d9")
        self.ButtonEditProg.configure(command=lambda: pdrobot_support.cb_edit_program(self.Listbox1))
        self.ButtonEditProg.configure(compound='left')
        self.ButtonEditProg.configure(disabledforeground="#a3a3a3")
        self.ButtonEditProg.configure(foreground="#000000")
        self.ButtonEditProg.configure(highlightbackground="#d9d9d9")
        self.ButtonEditProg.configure(highlightcolor="black")
        self.ButtonEditProg.configure(pady="0")
        self.ButtonEditProg.configure(state='disabled')
        self.ButtonEditProg.configure(text='''Edit''')

        self.ButtonSelectFile = tk.Button(self.Labelframe4)
        self.ButtonSelectFile.place(relx=0.907, rely=0.267, height=24, width=30, bordermode='ignore')
        self.ButtonSelectFile.configure(activebackground="beige")
        self.ButtonSelectFile.configure(activeforeground="black")
        self.ButtonSelectFile.configure(background="#d9d9d9")
        self.ButtonSelectFile.configure(command=lambda: pdrobot_support.cb_getSourceFile(self.Listbox1))
        self.ButtonSelectFile.configure(compound='left')
        self.ButtonSelectFile.configure(disabledforeground="#a3a3a3")
        self.ButtonSelectFile.configure(foreground="#000000")
        self.ButtonSelectFile.configure(highlightbackground="#d9d9d9")
        self.ButtonSelectFile.configure(highlightcolor="black")
        self.ButtonSelectFile.configure(pady="0")
        self.ButtonSelectFile.configure(text='''...''')

        self.Labelframe5 = tk.LabelFrame(self.top)
        self.Labelframe5.place(relx=0.033, rely=0.614, relheight=0.236, relwidth=0.35)
        self.Labelframe5.configure(relief='flat')
        self.Labelframe5.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.Labelframe5.configure(foreground="#000000")
        self.Labelframe5.configure(relief="flat")
        self.Labelframe5.configure(text='''GCode''')
        self.Labelframe5.configure(background="#d9d9d9")
        self.Labelframe5.configure(highlightbackground="#d9d9d9")
        self.Labelframe5.configure(highlightcolor="black")

        self.Listbox1 = tk.Listbox(self.Labelframe5)
        self.Listbox1.place(relx=0.024, rely=0.152, relheight=0.818, relwidth=0.929, bordermode='ignore')
        self.Listbox1.configure(activestyle="dotbox")
        self.Listbox1.configure(background="white")
        self.Listbox1.configure(disabledforeground="#a3a3a3")
        self.Listbox1.configure(exportselection="0")
        self.Listbox1.configure(font="TkFixedFont")
        self.Listbox1.configure(foreground="#000000")
        self.Listbox1.configure(highlightthickness="0")
        self.Listbox1.configure(relief="groove")
        self.Listbox1.configure(selectmode='single')
        self.Listbox1.configure(listvariable=self.gcode_list_var)
        self.Listbox1_tooltip = \
            ToolTip(self.Listbox1, '''GCODE commands (Run or Step)''')
        self.scrollbar = tk.Scrollbar(self.Labelframe5)
        self.scrollbar.pack(side=tk.RIGHT, fill=tk.BOTH)
        self.Listbox1.config(yscrollcommand=self.scrollbar.set)
        self.scrollbar.config(command=self.Listbox1.yview)

        self.Labelframe6 = tk.LabelFrame(self.top)
        self.Labelframe6.place(relx=0.767, rely=0.74, relheight=0.12, relwidth=0.167)
        self.Labelframe6.configure(relief='groove')
        self.Labelframe6.configure(foreground="#000000")
        self.Labelframe6.configure(labelanchor="n")
        self.Labelframe6.configure(text='''Serial Port''')
        self.Labelframe6.configure(background="#d9d9d9")

        self.ButtonSp = tk.Button(self.Labelframe6)
        self.ButtonSp.place(relx=0.2, rely=0.588, height=24, width=57, bordermode='ignore')
        self.ButtonSp.configure(activebackground="#dfdfdf")
        self.ButtonSp.configure(activeforeground="black")
        self.ButtonSp.configure(background="#d9d9d9")
        self.ButtonSp.configure(command=lambda: pdrobot_support.cb_serial_port_reset(self.serial_prt.get()))
        self.ButtonSp.configure(compound='left')
        self.ButtonSp.configure(disabledforeground="#a3a3a3")
        self.ButtonSp.configure(foreground="#000000")
        self.ButtonSp.configure(highlightbackground="#d9d9d9")
        self.ButtonSp.configure(highlightcolor="black")
        self.ButtonSp.configure(pady="0")
        self.ButtonSp.configure(text='''Capture''')
        
        self.EntrySp = tk.Entry(self.Labelframe6)
        self.EntrySp.place(relx=0.05, rely=0.24, height=24, relwidth=0.90, bordermode='ignore')
        self.EntrySp.configure(disabledforeground="#a3a3a3")
        self.EntrySp.configure(background="white")
        self.EntrySp.configure(foreground="black")
        self.EntrySp.configure(insertbackground="black")
        self.EntrySp.configure(font="TkFixedFont")
        self.EntrySp.configure(textvariable=self.serial_prt)
        self.serial_prt.set("-----")


from time import time, localtime, strftime

class ToolTip(tk.Toplevel):
    """ Provides a ToolTip widget for Tkinter.
    """

    def __init__(self, wdgt, msg=None, msgFunc=None, delay=0.5,
                 follow=True):
        self.wdgt = wdgt
        self.parent = self.wdgt.master
        tk.Toplevel.__init__(self, self.parent, bg='black', padx=1, pady=1)
        self.withdraw()
        self.overrideredirect(True)
        self.msgVar = tk.StringVar()
        if msg is None:
            self.msgVar.set('No message provided')
        else:
            self.msgVar.set(msg)
        self.msgFunc = msgFunc
        self.delay = delay
        self.follow = follow
        self.visible = 0
        self.lastMotion = 0
        self.msg = tk.Message(self, textvariable=self.msgVar, bg=_bgcolor,
                              fg=_fgcolor, font="TkDefaultFont",
                              aspect=1000)
        self.msg.grid()
        self.wdgt.bind('<Enter>', self.spawn, '+')
        self.wdgt.bind('<Leave>', self.hide, '+')
        self.wdgt.bind('<Motion>', self.move, '+')

    def spawn(self, event=None):
        self.visible = 1
        self.after(int(self.delay * 1000), self.show)

    def show(self):
        if self.visible == 1 and time() - self.lastMotion > self.delay:
            self.visible = 2
        if self.visible == 2:
            self.deiconify()

    def move(self, event):
        self.lastMotion = time()
        if self.follow is False:
            self.withdraw()
            self.visible = 1
        self.geometry('+%i+%i' % (event.x_root + 20, event.y_root - 10))
        try:
            self.msgVar.set(self.msgFunc())
        except:
            pass
        self.after(int(self.delay * 1000), self.show)

    def hide(self, event=None):
        self.visible = 0
        self.withdraw()

    def update(self, msg):
        self.msgVar.set(msg)

    def configure(self, **kwargs):
        backgroundset = False
        foregroundset = False
        # Get the current tooltip text just in case the user doesn't provide any.
        current_text = self.msgVar.get()
        # to clear the tooltip text, use the .update method
        if 'debug' in kwargs.keys():
            debug = kwargs.pop('debug', False)
            if debug:
                for key, value in kwargs.items():
                    print(f'key: {key} - value: {value}')
        if 'background' in kwargs.keys():
            background = kwargs.pop('background')
            backgroundset = True
        if 'bg' in kwargs.keys():
            background = kwargs.pop('bg')
            backgroundset = True
        if 'foreground' in kwargs.keys():
            foreground = kwargs.pop('foreground')
            foregroundset = True
        if 'fg' in kwargs.keys():
            foreground = kwargs.pop('fg')
            foregroundset = True

        fontd = kwargs.pop('font', None)
        if 'text' in kwargs.keys():
            text = kwargs.pop('text')
            if (text == '') or (text == "\n"):
                text = current_text
            else:
                self.msgVar.set(text)
        reliefd = kwargs.pop('relief', 'flat')
        justifyd = kwargs.pop('justify', 'left')
        padxd = kwargs.pop('padx', 1)
        padyd = kwargs.pop('pady', 1)
        borderwidthd = kwargs.pop('borderwidth', 2)
        wid = self.msg  # The message widget which is the actual tooltip
        if backgroundset:
            wid.config(bg=background)
        if foregroundset:
            wid.config(fg=foreground)
        wid.config(font=fontd)
        wid.config(borderwidth=borderwidthd)
        wid.config(relief=reliefd)
        wid.config(justify=justifyd)
        wid.config(padx=padxd)
        wid.config(pady=padyd)


#       End of Class ToolTip

# The following code is added to facilitate the Scrolled widgets you specified.
class AutoScroll(object):
    """Configure the scrollbars for a widget.
    """

    def __init__(self, master):
        #  Rozen. Added the try-except clauses so that this class
        #  could be used for scrolled entry widget for which vertical
        #  scrolling is not supported. 5/7/14.
        try:
            vsb = ttk.Scrollbar(master, orient='vertical', command=self.yview)
        except:
            pass
        hsb = ttk.Scrollbar(master, orient='horizontal', command=self.xview)
        try:
            self.configure(yscrollcommand=self._autoscroll(vsb))
        except:
            pass
        self.configure(xscrollcommand=self._autoscroll(hsb))
        self.grid(column=0, row=0, sticky='nsew')
        try:
            vsb.grid(column=1, row=0, sticky='ns')
        except:
            pass
        hsb.grid(column=0, row=1, sticky='ew')
        master.grid_columnconfigure(0, weight=1)
        master.grid_rowconfigure(0, weight=1)
        # Copy geometry methods of master  (taken from ScrolledText.py)
        methods = tk.Pack.__dict__.keys() | tk.Grid.__dict__.keys() \
                  | tk.Place.__dict__.keys()
        for meth in methods:
            if meth[0] != '_' and meth not in ('config', 'configure'):
                setattr(self, meth, getattr(master, meth))

    @staticmethod
    def _autoscroll(sbar):
        """Hide and show scrollbar as needed.
        """

        def wrapped(first, last):
            first, last = float(first), float(last)
            if first <= 0 and last >= 1:
                sbar.grid_remove()
            else:
                sbar.grid()
            sbar.set(first, last)

        return wrapped

    def __str__(self):
        return str(self.master)


def _create_container(func):
    '''Creates a ttk Frame with a given master, and use this new frame to
    place the scrollbars and the widget.'''

    def wrapped(cls, master, **kw):
        container = ttk.Frame(master)
        container.bind('<Enter>', lambda e: _bound_to_mousewheel(e, container))
        container.bind('<Leave>', lambda e: _unbound_to_mousewheel(e, container))
        return func(cls, container, **kw)

    return wrapped


class ScrolledText(AutoScroll, tk.Text):
    '''A standard Tkinter Text widget with scrollbars that will
    automatically show/hide as needed.'''

    @_create_container
    def __init__(self, master, **kw):
        tk.Text.__init__(self, master, **kw)
        AutoScroll.__init__(self, master)


import platform


def _bound_to_mousewheel(event, widget):
    child = widget.winfo_children()[0]
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        child.bind_all('<MouseWheel>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-MouseWheel>', lambda e: _on_shiftmouse(e, child))
    else:
        child.bind_all('<Button-4>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Button-5>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-Button-4>', lambda e: _on_shiftmouse(e, child))
        child.bind_all('<Shift-Button-5>', lambda e: _on_shiftmouse(e, child))


def _unbound_to_mousewheel(event, widget):
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        widget.unbind_all('<MouseWheel>')
        widget.unbind_all('<Shift-MouseWheel>')
    else:
        widget.unbind_all('<Button-4>')
        widget.unbind_all('<Button-5>')
        widget.unbind_all('<Shift-Button-4>')
        widget.unbind_all('<Shift-Button-5>')


def _on_mousewheel(event, widget):
    if platform.system() == 'Windows':
        widget.yview_scroll(-1 * int(event.delta / 120), 'units')
    elif platform.system() == 'Darwin':
        widget.yview_scroll(-1 * int(event.delta), 'units')
    else:
        if event.num == 4:
            widget.yview_scroll(-1, 'units')
        elif event.num == 5:
            widget.yview_scroll(1, 'units')


def _on_shiftmouse(event, widget):
    if platform.system() == 'Windows':
        widget.xview_scroll(-1 * int(event.delta / 120), 'units')
    elif platform.system() == 'Darwin':
        widget.xview_scroll(-1 * int(event.delta), 'units')
    else:
        if event.num == 4:
            widget.xview_scroll(-1, 'units')
        elif event.num == 5:
            widget.xview_scroll(1, 'units')


def start_up():
    pdrobot_support.main()


if __name__ == '__main__':
    pdrobot_support.main()
